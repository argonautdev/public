/* tslint:disable */
/* eslint-disable */
/**
 * Midgard API Docs
 * This is the docs for midgard api for argonaut
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { V1alpha1Arguments } from './v1alpha1-arguments';
import { V1alpha1ContinueOn } from './v1alpha1-continue-on';
import { V1alpha1LifecycleHook } from './v1alpha1-lifecycle-hook';
import { V1alpha1Sequence } from './v1alpha1-sequence';
import { V1alpha1Template } from './v1alpha1-template';
import { V1alpha1TemplateRef } from './v1alpha1-template-ref';

/**
 * 
 * @export
 * @interface V1alpha1DAGTask
 */
export interface V1alpha1DAGTask {
    /**
     * 
     * @type {V1alpha1Arguments}
     * @memberof V1alpha1DAGTask
     */
    arguments?: V1alpha1Arguments;
    /**
     * 
     * @type {V1alpha1ContinueOn}
     * @memberof V1alpha1DAGTask
     */
    continueOn?: V1alpha1ContinueOn;
    /**
     * Dependencies are name of other targets which this depends on
     * @type {Array<string>}
     * @memberof V1alpha1DAGTask
     */
    dependencies?: Array<string>;
    /**
     * Depends are name of other targets which this depends on
     * @type {string}
     * @memberof V1alpha1DAGTask
     */
    depends?: string;
    /**
     * 
     * @type {{ [key: string]: V1alpha1LifecycleHook; }}
     * @memberof V1alpha1DAGTask
     */
    hooks?: { [key: string]: V1alpha1LifecycleHook; };
    /**
     * 
     * @type {V1alpha1Template}
     * @memberof V1alpha1DAGTask
     */
    inline?: V1alpha1Template;
    /**
     * Name is the name of the target
     * @type {string}
     * @memberof V1alpha1DAGTask
     */
    name?: string;
    /**
     * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.
     * @type {string}
     * @memberof V1alpha1DAGTask
     */
    onExit?: string;
    /**
     * Name of template to execute
     * @type {string}
     * @memberof V1alpha1DAGTask
     */
    template?: string;
    /**
     * 
     * @type {V1alpha1TemplateRef}
     * @memberof V1alpha1DAGTask
     */
    templateRef?: V1alpha1TemplateRef;
    /**
     * When is an expression in which the task should conditionally execute
     * @type {string}
     * @memberof V1alpha1DAGTask
     */
    when?: string;
    /**
     * WithItems expands a task into multiple parallel tasks from the items in the list
     * @type {Array<object>}
     * @memberof V1alpha1DAGTask
     */
    withItems?: Array<object>;
    /**
     * WithParam expands a task into multiple parallel tasks from the value in the parameter, which is expected to be a JSON list.
     * @type {string}
     * @memberof V1alpha1DAGTask
     */
    withParam?: string;
    /**
     * 
     * @type {V1alpha1Sequence}
     * @memberof V1alpha1DAGTask
     */
    withSequence?: V1alpha1Sequence;
}


