/* tslint:disable */
/* eslint-disable */
/**
 * Midgard API Docs
 * This is the docs for midgard api for argonaut
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { GormDeletedAt } from './gorm-deleted-at';

/**
 * 
 * @export
 * @interface IntegrationsAWSIntegration
 */
export interface IntegrationsAWSIntegration {
    /**
     * 
     * @type {string}
     * @memberof IntegrationsAWSIntegration
     */
    CreatedAt?: string;
    /**
     * 
     * @type {GormDeletedAt}
     * @memberof IntegrationsAWSIntegration
     */
    DeletedAt?: GormDeletedAt;
    /**
     * 
     * @type {number}
     * @memberof IntegrationsAWSIntegration
     */
    ID?: number;
    /**
     * 
     * @type {string}
     * @memberof IntegrationsAWSIntegration
     */
    UpdatedAt?: string;
    /**
     * The AWS access key for this IAM user
     * @type {Array<number>}
     * @memberof IntegrationsAWSIntegration
     */
    aws_access_key_id?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof IntegrationsAWSIntegration
     */
    aws_account_id?: string;
    /**
     * The AWS arn this is integration is linked to
     * @type {string}
     * @memberof IntegrationsAWSIntegration
     */
    aws_arn?: string;
    /**
     * The AWS cluster ID See https://github.com/kubernetes-sigs/aws-iam-authenticator#what-is-a-cluster-id
     * @type {Array<number>}
     * @memberof IntegrationsAWSIntegration
     */
    aws_cluster_id?: Array<number>;
    /**
     * The optional AWS region (required by some session configurations)
     * @type {string}
     * @memberof IntegrationsAWSIntegration
     */
    aws_region?: string;
    /**
     * The AWS secret key for this IAM user
     * @type {Array<number>}
     * @memberof IntegrationsAWSIntegration
     */
    aws_secret_access_key?: Array<number>;
    /**
     * An optional session token, if the user is assuming a role
     * @type {Array<number>}
     * @memberof IntegrationsAWSIntegration
     */
    aws_session_token?: Array<number>;
    /**
     * The Organization that this integration belongs to
     * @type {number}
     * @memberof IntegrationsAWSIntegration
     */
    organization_id?: number;
    /**
     * The id of the user that linked this auth mechanism
     * @type {number}
     * @memberof IntegrationsAWSIntegration
     */
    user_id?: number;
}


