/* tslint:disable */
/* eslint-disable */
/**
 * Midgard API Docs
 * This is the docs for midgard api for argonaut
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { V1alpha1DAGTask } from './v1alpha1-dagtask';

/**
 * 
 * @export
 * @interface V1alpha1DAGTemplate
 */
export interface V1alpha1DAGTemplate {
    /**
     * This flag is for DAG logic. The DAG logic has a built-in \"fail fast\" feature to stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Then it waits until all DAG nodes are completed before failing the DAG itself. The FailFast flag default is true,  if set to false, it will allow a DAG to run all branches of the DAG to completion (either success or failure), regardless of the failed outcomes of branches in the DAG. More info and example about this feature at https://github.com/argoproj/argo-workflows/issues/1442
     * @type {boolean}
     * @memberof V1alpha1DAGTemplate
     */
    failFast?: boolean;
    /**
     * Target are one or more names of targets to execute in a DAG
     * @type {string}
     * @memberof V1alpha1DAGTemplate
     */
    target?: string;
    /**
     * Tasks are a list of DAG tasks +patchStrategy=merge +patchMergeKey=name
     * @type {Array<V1alpha1DAGTask>}
     * @memberof V1alpha1DAGTemplate
     */
    tasks?: Array<V1alpha1DAGTask>;
}


